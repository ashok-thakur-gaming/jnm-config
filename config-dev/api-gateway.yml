server:
  port: 8080
  error:
    include-message: always

jwt:
  secret: BvPHGM8C0ia4uOuxxqPD5DTbWC9F9TWvPStp3pb7ARo0oK2mJ3pd3YG4lxA9i8bj6OTbadwezxgeEByY

eureka:
  client:
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instanceId: "${spring:application.name}:${random.uuid}"

logging:
  level:
    root: INFO
    '[org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator]': INFO
    '[org.springframework.cloud.gateway]': TRACE



spring:
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      loadbalancer:
        ribbon:
          enabled: true
      routes:
        - id: discovery-server
          uri: http://localhost:8761
          predicates:
            - Path= /eureka/web
          filters:
            - SetPath=/
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff: 
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: downService
                fallbackUri: forward:/service-fallback
        - id: discovery-server-static
          uri: http://localhost:8761
          predicates:
            - Path= /eureka/**
          filters:
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff: 
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: downService
                fallbackUri: forward:/service-fallback
        - id: vendor-service
          uri: lb://vendor-service
          predicates:
            - Path= /api/v2.1/vendor/**
          filters:
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff: 
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: downService
                fallbackUri: forward:/service-fallback
        - id: cas-service
          uri: lb://cas-service
          predicates:
            - Path= /api/v2.1/cas/**, /api/v2.1/account/**
          filters:
            - AuthenticationFilter
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff: 
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: downService
                fallbackUri: forward:/service-fallback
        - id: affiliate-service
          uri: lb://affiliate-service
          predicates:
            - Path= /api/v2.1/affiliate/**, /api/v2.1/campaign/**, /api/v2.1/campaign-tracker/**
          filters:
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff: 
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: downService
                fallbackUri: forward:/service-fallback
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path= /api/v2.1/user/**, /api/v2.1/auth/**
          filters:
            - AuthenticationFilter
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff: 
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: downService
                fallbackUri: forward:/service-fallback
        - id: wallet-service
          uri: lb://wallet-service
          predicates:
            - Path= /api/v2.1/wallet/**
          filters:
            - AuthenticationFilter
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff: 
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: downService
                fallbackUri: forward:/service-fallback
        - id: wallet-service
          uri: lb://wallet-service
          predicates:
            - Path= /process-wallet/**
          filters:
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff: 
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: downService
                fallbackUri: forward:/service-fallback

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      downService:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 5
        slidingWindowType: COUNT_BASED
  timelimiter:
    instances:
      downService:
        timeoutDuration: 3s
  retry:
    instances:
      downService:
        registerHealthIndicator: true
        maxRetryAttempts: 3
        waitDuration: 5s
  ratelimiter:
    instances:
      downService:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitRefreshPeriod: 10s
        timeoutDuration: 3s
